{"version":3,"file":"index.js","mappings":"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","sources":["webpack://ess_backend/webpack/bootstrap","webpack://ess_backend/webpack/runtime/compat get default export","webpack://ess_backend/webpack/runtime/define property getters","webpack://ess_backend/webpack/runtime/hasOwnProperty shorthand","webpack://ess_backend/external var \"React\"","webpack://ess_backend/external var \"ReactDOM\"","webpack://ess_backend/./src/helpers/loadScript.ts","webpack://ess_backend/./src/nav/nav-menu.tsx","webpack://ess_backend/./src/helpers/testDevice.ts","webpack://ess_backend/./src/index.tsx","webpack://ess_backend/./src/helpers/MindCookies.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","/**\n * Function that grabs url of a script and returns promise with onload function\n * @since 3.0 \n * \n **/\nconst loadScript = ( url:string ):Promise<unknown> =>{\n\n  const script = document.createElement( 'script' );\n  const att = document.createAttribute( 'type' );\n  \n  att.value = 'text/javascript';\n  script.setAttributeNode( att );\n\n  const ret = new Promise( ( resolve, reject ) =>{\n    script.onload = ()=>{\n      resolve( 'script' + url + ' loaded' );\n    };\n    script.onerror = ()=>{\n      reject( 'script ' + url + ' has encountered an error.' );\n    };\n  } );\n\n  script.src = url;\n\n  document.head.appendChild( script );\n\n  return ret;\n\n};\nexport default loadScript;","\nimport testDevice from '../helpers/testDevice';\nimport React, { ReactElement, useEffect, useState } from 'react';\nimport { MindGlobalObject } from '../types';\nimport loadScript from '../helpers/loadScript';\n\ndeclare interface NavMenuProps {\n  mindGlobal: MindGlobalObject\n}\n\ndeclare interface Indexable {\n  [key: string]: ReactElement | null\n}\n\n/**\n * Handles mobile/device navbar with menu switching.\n * Checks if Components are present when needed and loads and inits them\n */\nconst NavMenu: React.FC<NavMenuProps> = ( { mindGlobal } ) => {\n\n  /** \n   * return true if user is logged in\n   * by checking wordpress cookie called wp-settings-time-6\n   * @return boolean true if logged\n   */\n\n\n  const deviceCheck = ():string=>{\n    const isMobile:boolean = testDevice() || window.innerWidth < mindGlobal.settings.navBreakpoint;\n    return( isMobile ? 'mobile' : 'desktop' );\n\n  };\n  const sizeSet = ():void => {   \n    setDevice( deviceCheck() );\n  };\n\n  const [device, setDevice] = useState<string>( deviceCheck() );\n  const [timer, setTimer] = useState<ReturnType<typeof setTimeout>>( setTimeout( sizeSet, 0 ) );\n  const [menuComp, setMenuComp] = useState<React.ReactElement | null>( null );\n\n  useEffect( ()=>{\n    console.log( 'now do the navigation type check init' );\n\n    window.onresize = () => {\n      clearTimeout( timer );\n      setTimer( setTimeout( sizeSet, 100 ) );\n    };\n\n  }, [] );\n\n\n  useEffect( ()=>{\n    if( !( mindGlobal as unknown as Indexable )[device + 'Nav'] )\n      callScript( mindGlobal.templateUrl + '/assets/js/nav/' + device + '.js?ver='+mindGlobal.templateVersion );\n    else\n      setMenuComp( ( mindGlobal as unknown as Indexable )[device + 'Nav'] );    \n  }, [device] );\n\n  const callScript = ( url:string ) => {\n    loadScript( url ).then( ()=>{\n      setMenuComp( ( mindGlobal as unknown as Indexable )[device + 'Nav'] );\n    } );\n  };\n\n\n\n\n  return (\n    <div>\n      { menuComp && menuComp }\n    </div>\n  );\n};\n\nexport default NavMenu;","\n/**\n * Checks the size of window as well as the user Agent to see whether the website\n * is viewed on mobile device or desktop.\n * \n * @returns Boolean - true for device, false for desktop (Real mobile first, huh?)\n * @since 3.0\n */\nexport default function testDevice ():boolean {\n\n  if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i.test( navigator.userAgent ) ) {\n    return true;\n  }\n  else\n    return false;\n}","\n// modules\nimport MindCookies from './helpers/MindCookies';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport NavMenu from './nav/nav-menu';\nimport loadScript from './helpers/loadScript';\n\n\ndeclare function initModals( modals:any ):void\n\n// type definitions\nimport './types/index';\n\n/**\n * Initialize Global settings for the Theme. \n * Maybe when extended in future good idea to move settings to separate file.\n */\nconst wmSettings = {\n  navBreakpoint: 760\n};\nwindow.MindGlobal.settings = wmSettings;\n\n/**\n * Cookie handler disabled at the moment. Will be used elsewhere probably as a part of a module.\n * Starts Cookies handler to store data about intros and such\n * Currently only intro played is stored in cookies\n */ \nwindow.MindGlobal.MindCookiesHandler = new MindCookies( './' );\n\n\n/**\n * Allows use of ScrollTrigger on gsap for all components (Currently not used at all )\n */\nwindow.gsap.registerPlugin( window.ScrollTrigger );\n\n\n/**\n * Initiates navigation\n */\n\ndocument.addEventListener( 'DOMContentLoaded', () => {\n\n\n  // Initiates top navigation or throw error\n\n  const navCont = document.querySelector( '#wmnav-cont' );\n\n  if( navCont ) {\n    ReactDOM.render( <NavMenu mindGlobal={window.MindGlobal} />, navCont );\n  }\n  else throw new DOMException( 'unable to find menu containers' );\n\n\n  // Initiates modals if there's at least one\n\n  if( document.querySelector( '.wmwp-modal-trigger' ) )\n    loadScript(  window.MindGlobal.templateUrl + '/assets/js/modals.js' ).then( ()=>{\n\n      \n\n      const subscribeModal = document.querySelector( '#ess-subscribe-modal' ) as HTMLDivElement;\n      const subscribeTriggers = document.querySelectorAll( '.wmwp-subscribe-trigger' );\n\n      if( subscribeModal ) {\n        subscribeTriggers.forEach( btn => {\n          btn.addEventListener( 'click', ()=>{ window.MindGlobal.Modal.show( subscribeModal ); } );\n        } );\n      }\n    } ); \n\n  \n} );\n\n\n\n\n","/*jshint esversion: 6 */\n\ninterface MindCookiesArr {\n  [key: string]: string;\n}\n\n\nexport default class MindCookies {\n  path: string;\n  arr_cookies: MindCookiesArr;\n\n  constructor ( path:string ) {\n    this.path = path;\n    //this.createCookiesArray();\n  }\n\n  static setCookie ( cname:string, cvalue:string, extime:number ) {\n\n    const d = new Date();\n\n    d.setTime( d.getTime() + ( extime ) );\n\n    const expires = 'expires=' + d.toUTCString();\n\n    document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/';\n    \n  }\n\n  /**\n   * Gets cookie based on string slug. If the cookie doesn't exist, returns null.\n   * \n   * @param cname String slug of the cookie to be checked\n   * @returns String | null Returns string value of the cookie or null if the cookie not exists\n   * @since 1.0\n   */\n  static getCookie ( cname:string ):string | null {\n\n    const name = cname + '=';\n    const decodedCookie = decodeURIComponent( document.cookie );\n\n\n    const ca = decodedCookie.split( ';' );\n\n    for ( let i = 0; i < ca.length; i++ ) {\n\n      let c = ca[i];\n\n      while ( c.charAt( 0 ) == ' ' ) {\n\n        c = c.substring( 1 );\n        console.log( c );\n\n      }\n\n      if ( c.indexOf( name ) == 0 ) {\n\n        return c.substring( name.length, c.length );\n\n      }\n    }\n    \n    return null;\n  }\n\n\n\n  /**\n   * Deletes cookie based on slug name\n   * \n   * @param name String - Slug name of the cookie to be deleted\n   * @returns void\n   * @since 1.0\n   */\n  static deleteCookie ( name:string ):void {\n    document.cookie = name + '=; Max-Age=-99999999;';\n  }\n\n  createCookiesArray () {\n\n    this.arr_cookies = {};\n\n    if ( document.cookie && document.cookie != '' ) {\n\n      const ca = document.cookie.split( ';' );\n\n      for ( let i = 0; i < ca.length; i++ ) {\n\n        let c = ca[i];\n        while ( c.charAt( 0 ) == ' ' ) {\n          c = c.substring( 1 );\n        }\n\n        const csa = c.split( '=' );\n\n        this.arr_cookies[csa[0]] = csa[1];\n      }\n      console.log( this.arr_cookies );\n    }\n  }\n}"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","React","ReactDOM","url","script","document","createElement","att","createAttribute","value","setAttributeNode","ret","Promise","resolve","reject","onload","onerror","src","head","appendChild","mindGlobal","deviceCheck","test","navigator","userAgent","window","innerWidth","settings","navBreakpoint","sizeSet","setDevice","device","useState","timer","setTimer","setTimeout","menuComp","setMenuComp","useEffect","console","log","onresize","clearTimeout","callScript","templateUrl","templateVersion","then","MindGlobal","MindCookiesHandler","constructor","path","this","setCookie","cname","cvalue","extime","Date","setTime","getTime","expires","toUTCString","cookie","getCookie","name","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","deleteCookie","createCookiesArray","arr_cookies","csa","gsap","registerPlugin","ScrollTrigger","addEventListener","navCont","querySelector","DOMException","subscribeModal","subscribeTriggers","querySelectorAll","forEach","btn","Modal","show"],"sourceRoot":""}