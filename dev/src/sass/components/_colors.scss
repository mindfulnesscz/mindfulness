$ess-blue: #00C0F3;
$ess-blue-dark: #0f2a56;
$ess-blue-supplementary: #174f72;
$ess-sand: #e1e0d4;
$dynairix-cyan: #00f0f0;
$dynairix-cyan-darker: #0ac4f3;

$primary-color-transp: rgba(60, 180, 255, 0.5);
$secondary-color-transp: rgba(15, 42, 86, 0.5);
$ess-darkest-transp: rgba(12, 22, 46, 0.5);
$ess-darkest-full: rgba(12, 22, 46, 1);
// background of the navigation cube on pages 
$light-gray: rgb(240, 240, 240);
$nav-cube-background: radial-gradient(circle, rgba(230, 230, 230, 1) 0%, rgba(211, 211, 211, 0.85) 77%);

.bg-psp-gradient {
  background: radial-gradient(#d5d1d5, #aea3b3)
}

.bg-merge-gradient {
  background: radial-gradient(#c5cccb, #83a5a0)
}

.bg-sense-gradient {
  background: radial-gradient(#d2cabe, #b2a386)
}


$essblue: ("base" : #14bef0,
  "lighten-1" : #59cbf2,
  "lighten-2" : #87c8ff,
  "lighten-3" : #b3e3f6,
  "lighten-4" : #d4effc,
  "lighten-5" : #eff4f4,
  "darken-1" : #00A0F0,
  "darken-2" : #2c77ca,
  "darken-3" : #1e3a6c,
  "darken-4" : #0f2a56,
  "darken-5" : #0f203e,
);

$green: ("base" : #86b755,
  "lighten-2" : #81C784,
  "lighten-1" : #66BB6A,
  "darken-1" : #43A047,
  "darken-2" : #388E3C);


$red: ("base" : #F44336,
  "lighten-2" : #E57373,
  "lighten-1" : #EF5350,
  "darken-1" : #E53935,
  "darken-2" : #D32F2F);


$grey: ("base" : #504d50,
  "darken-1" : #30383b,
  "darken-2" : #2b2f31,
  "lighten-5" : #eeeeee,
  "lighten-4" : #e6e7e8,
  "lighten-3" : #d3d4d5,
  "lighten-2" : #bfbfc0,
  "lighten-1" : #787a7a);

$processing: ("base" : #d4cba4,
  "darken-1" : #c2b98e,
  "darken-2" : #9d906f,
  "lighten-1": #e5debf,
  "lighten-2": #f3efde,
);

$paintshop: ("base" : #9b64aa,
  "darken-1" : #895aa4,
  "darken-2" : #5b266c,
  "lighten-1": #bf8dcd,
  "lighten-2": #f1e4f5,

);

$data-cleaning: ("base" : #0ea285,
  "darken-1" : #108673,
  "darken-2" : #006654,
  "lighten-1": #86d2c3,
  "lighten-2": #ddf6f1);

$mobility: ("base" : #eeaa32,
  "darken-1" : #be8b37,
  "darken-2" : #ae7d36,
  "lighten-1": #eec886,
  "lighten-2": #f7ebd6);


$washing: ("base" : #9ad9eb,
  "darken-1" : #68b2c6,
  "darken-2" : #43888d,
  "lighten-1": #c1e8f3,
  "lighten-2": #e8f7fa,
);
$environment: ("base" : #a4d06e,
  "darken-1" : #78a94e,
  "darken-2" : #577d40,
  "lighten-1": #c7e5a2,
  "lighten-2": #ecf9dd,
);
$oil-gas: ("base" : #52656e,
  "darken-1" : #294146,
  "darken-2" : #001d27,
  "lighten-1": #7995a2,
  "lighten-2": #c5d6de,
);

$shades: ("black" : #000000,
  "white" : #FFFFFF,
  "transparent" : transparent);

$colors-ess: ("essblue": $essblue,
  "red": $red,
  "green": $green,
  "grey": $grey,
  "shades": $shades,
  "processing":$processing,
  "data-cleaning": $data-cleaning,
  "paintshop": $paintshop,
  "mobility": $mobility,
  "washing": $washing,
  "environment": $environment,
  "oil-gas": $oil-gas);

@function color($color, $type) {
  @if map-has-key($colors-ess, $color) {
    $curr_color: map-get($colors-ess, $color);

    @if map-has-key($curr_color, $type) {
      @return map-get($curr_color, $type);
    }
  }

  @warn "Unknown `#{$color}` - `#{$type}` in $colors.";
  @return null;
}




// COLOR CLASSES ---------------------------------------------------


@each $color_name,
$color in $colors-ess {

  @each $color_type,
  $color_value in $color {
    @if $color_type=="base" {
      .#{$color_name} {
        background-color: $color_value;
      }

      .has-#{$color_name}-background-color {
        background-color: $color_value;
      }

      .has-#{$color_name}-color {
        color: $color_value;
      }
    }

    @else {
      .#{$color_name}.#{$color_type} {
        background-color: $color_value;
      }

      .#{$color_name}-text.text-#{$color_type} {
        color: $color_value;
      }
    }
  }
}


// SHADES CLASSES ---------------------------------------------------


@each $color,
$color_value in $shades {
  .#{$color} {
    background-color: $color_value;
  }

  .#{$color}-text {
    color: $color_value;
  }
}


// GREY CLASSES ---------------------------------------------------


@each $color,
$color_value in $grey {

  .has-grey-#{$color}-background-color {
    background-color: $color_value;
  }

  .grey-#{$color}-text-color {
    color: $color_value;
  }

  .has-grey-#{$color}-color {
    color: $color_value;
  }
}


// MIXINS FOR GRADIENT AND OPACITY -------------------------------


@mixin opacity($value) {
  opacity: $value;
}

@mixin radial-gradient($outer_color, $inner_color) {
  background: radial-gradient($outer_color, $inner_color);
}


// ESS BUTTONS ---------------------------------------------------

@each $color_name,
$color in $colors-ess {
  @if $color_name !="shades" {
    .ess-button.has-#{$color_name}-background-color {
      background-color: color($color_name, 'base');
    }

    .ess-button.has-#{$color_name}-background-color:hover {
      background-color: color($color_name, 'darken-1');
    }

    .ess-button.has-#{$color_name}-background-color.outline {
      background-color: white;
      color: color($color_name, 'darken-2');
      border: 1px solid color($color_name, 'base');
    }

    .ess-button.has-#{$color_name}-background-color.outline:hover {
      background-color: color($color_name, 'lighten-2');
    }
  }
}